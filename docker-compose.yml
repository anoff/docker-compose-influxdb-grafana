version: "3.3"

networks:
  metrics:
    external: false

services:
  influxdb:
    image: influxdb:1.8 # version pin to v1 as v2 break might occur soon on latest tag
    container_name: influxdb
    restart: always
    networks: [metrics]
    ports:
      - "8086:8086"
    volumes:
      - $HOME/docker/influxdb/data:/var/lib/influxdb
      - $HOME/docker/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro
      - $HOME/docker/influxdb/init:/docker-entrypoint-initdb.d
    environment:
      - INFLUXDB_ADMIN_USER=${INFLUXDB_USERNAME} # sourced from .env
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASSWORD} # sourced from .env
  telegraf:
    image: telegraf:latest
    restart: always
    container_name: telegraf
    networks: [metrics]
    volumes:
      - $HOME/docker/influxdb/telegraf.conf:/etc/telegraf/telegraf.conf:ro
  chronograf:
    image: chronograf:latest
    container_name: chronograf
    restart: always
    ports:
      - "127.0.0.1:8888:8888" # as there is no auth on chronograf, make it accessible only from localhost not the entire network
    depends_on:
      - influxdb
    networks: [metrics]
    environment:
      - INFLUXDB_URL=http://influxdb:8086 # needs to match container_name
      - INFLUXDB_USERNAME=${INFLUXDB_USERNAME} # sourced from .env
      - INFLUXDB_PASSWORD=${INFLUXDB_PASSWORD} # sourced from .env
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    networks: [metrics]
    env_file: [.env]
    ports:
      - "3000:3000" # expose for localhost
    volumes:
      # Data persistency
      # sudo mkdir -p $HOME/docker/grafana/data && sudo chown 472:472 $HOME/docker/grafana/data
      - $HOME/docker/grafana/data:/var/lib/grafana # data path
      - $HOME/docker/grafana/grafana.ini:/etc/grafana/grafana.ini
      - $HOME/docker/grafana/provisioning:/etc/grafana/provisioning
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.enforce-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.enforce-https.redirectscheme.permanent=true"
      - "traefik.http.routers.grafana-insecure.middlewares=enforce-https"
      - "traefik.http.routers.grafana-insecure.rule=Host(`grafana.sub.root.io`)"
      - "traefik.http.routers.grafana-insecure.entrypoints=web"
      - "traefik.http.services.grafana.loadBalancer.server.port=3000"
      - "traefik.http.routers.grafana.rule=Host(`grafana.sub.root.io`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=le"
  traefik:
    image: "traefik:v2.3"
    container_name: "traefik"
    networks: [metrics]
    restart: always
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.email=<yourmail>@gmail.com"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  cloudflare-ddns-grafana:
    image: oznu/cloudflare-ddns:latest
    container_name: cloudflare-grafana
    restart: always
    environment:
      - API_KEY=${CLOUDFLARE_API_TOKEN}
      - ZONE=root.io
      - SUBDOMAIN=*.sub
      - PROXIED=false
